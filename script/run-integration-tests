#!/bin/bash

set -e

ROOT="$(cd "$(dirname "$0")/.." && pwd)"

usage() {
  cat <<USAGE >&2
usage: $0 [options]

Boot a Flynn cluster and run integration tests.

OPTIONS:
  -h, --help               Show this message
  -n, --size=SIZE          Cluster size [default: 1]
  -f, --filter=FILTER      Regular expression selecting which tests and/or suites to run
  -s, --stream             Stream debug output
  -v, --version=VERSION    Boot using the released VERSION (e.g. v20151104.1)
USAGE
}

main() {
  local size="1"
  local filter
  local stream=false
  local version=""

  while true; do
    case "$1" in
      -h | --help)
        usage
        exit 0
        ;;
      -n | --size)
        if [[ -z "$2" ]]; then
          fail "--size flag requires an argument"
        fi
        size="$2"
        shift 2
        ;;
      -f | --filter)
        if [[ -z "$2" ]]; then
          fail "--filter flag requires an argument"
        fi
        filter="$2"
        shift 2
        ;;
      -s | --stream)
        stream=true
        shift
        ;;
      -v | --version)
        if [[ -z "$2" ]]; then
          fail "--version flag requires an argument"
        fi
        version="$2"
        shift 2
        ;;
      *)
        break
        ;;
    esac
  done

  if [[ $# -ne 0 ]]; then
    usage
    exit 1
  fi

  local flynn="${ROOT}/cli/bin/flynn"
  local flynn_host="${ROOT}/host/bin/flynn-host"

  pushd "${ROOT}" >/dev/null
  make
  popd >/dev/null

  export BACKOFF_PERIOD="5s"

  local boot_flags=(
    "--size" "${size}"
  )
  if [[ -n "${version}" ]]; then
    boot_flags+=("--version" "${version}")
  fi
  cluster_add=$("${ROOT}/script/bootstrap-flynn" ${boot_flags[@]} &> >(tee /dev/stderr) | tail -3 | head -1)

  if [[ "${cluster_add:0:17}" != "flynn cluster add" ]]; then
    echo Bootstrap failed >&2
    exit 1
  fi

  sudo mv /etc/resolv.conf{,.backup}
  trap 'sudo mv /etc/resolv.conf{.backup,}' EXIT
  echo "nameserver $(ifconfig flynnbr0 | grep -oP 'inet addr:\S+' | cut -d: -f2)" | sudo tee /etc/resolv.conf

  "${ROOT}/script/configure-docker" "${CLUSTER_DOMAIN:-"${size}.localflynn.com"}"

  export FLYNNRC=/tmp/flynnrc
  "${flynn}" cluster remove default
  "${flynn}" cluster add --docker ${cluster_add:18}

  cd "${ROOT}/test"

  local args=(
    "--concurrency 1"
    "--flynnrc ${FLYNNRC}"
    "--cli ${flynn}"
    "--flynn-host ${flynn_host}"
    "--debug"
  )

  if [[ -n "${filter}" ]]; then
    args+=("--run ${filter}")
  fi
  if $stream; then
    args+=("--stream")
  fi
  args+=("--router-ip=192.0.2.200")

  bin/flynn-test ${args[@]}
}

main $@
